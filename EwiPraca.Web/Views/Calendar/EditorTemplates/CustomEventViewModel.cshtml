@model EwiPraca.Models.Calendar.CustomEventViewModel


@Html.AntiForgeryToken()
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.CompanyId)
@Html.HiddenFor(x => x.CreatedDate)
@Html.HiddenFor(x => x.UpdatedDate)

<div class="row modal-row">
    @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextAreaFor(m => m.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Title)
    </div>
</div>

<div class="row modal-row">
    @Html.LabelFor(m => m.StartDate, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.StartDate)
    </div>
</div>

<div class="row modal-row">
    @Html.LabelFor(m => m.EndDate, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.EndDate)
    </div>
</div>

<div class="row modal-row">
    @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description)
    </div>
</div>
<div class="row modal-row">
    @Html.LabelFor(m => m.Reminder, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.CheckBoxFor(m => m.Reminder)
    </div>
</div>
<div class="row modal-row">
    @Html.LabelFor(m => m.IsOccurency, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.CheckBoxFor(m => m.IsOccurency)
    </div>
</div>
<div class="row modal-row occurence-row">
    @Html.LabelFor(m => m.OccurencyIntervalNumber, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.OccurencyIntervalNumber, new { @class = "form-control", @type = "number", @min = "1", @step = "1.00", @onkeypress = "return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57" })
        @Html.ValidationMessageFor(m => m.OccurencyIntervalNumber)
    </div>
</div>
<div class="row modal-row occurence-row">
    @Html.LabelFor(m => m.OccurenceType, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EnumDropDownListFor(
              x => x.OccurenceType,
              "Wybierz typ",
              new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.OccurenceType)
    </div>
</div>
<div class="row modal-row">
    <div class="col-md-12">
        <div class="float-right">
            <input type="submit" class="btn btn-default" value="Zapisz" />
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#IsOccurency').change(function () {
            $('.occurence-row').toggle(this.checked);

            if(!this.checked)
            {
                $("#OccurencyIntervalNumber").val('');
                $("#OccurenceType option[value='']").attr('selected', true)
            }
        }).change(); //ensure visible state matches initially

        var endDate = $('#EndDate').appendDtpicker({
            locale: "pl"
        });

        $('#StartDate').appendDtpicker({
            locale: "pl"
        });

        $('#EndDate').val("@Model.EndDate.ToString("yyyy-MM-dd HH:mm")");
        $('#StartDate').val("@Model.StartDate.ToString("yyyy-MM-dd HH:mm")");
    });
</script>