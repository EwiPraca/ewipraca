@model EwiPraca.Models.EmployeeViewModel

@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.UserCompanyId)

@Html.HiddenFor(x => x.CreatedDate)
@Html.HiddenFor(x => x.UpdatedDate)
<div class="row modal-row" id="employee-photo-row">
    @Html.LabelFor(m => m.PhotoURL, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @if (Model == null || string.IsNullOrEmpty(Model.PhotoURL))
        {
            <img src="~/Content/img/default-person.png" class="employee-photo" />
        }
        else
        {
            <img src="@Url.Content(Model.PhotoURL)" class="employee-photo" />
        }
    </div>
</div>

<div class="row modal-row">
    <div class="col-md-2">
    </div>
    <div class="col-md-10">
        <span id="change-photo-container"><input id="input-employee-photo-file" name="input-employee-photo-file" type="file" class="file" data-browse-on-zone-click="true" accept="image/*"></span>
        <span id="show-edit-employee-photo-modal" class="button">Zmień zdjęcie</span>
    </div>
</div>

<div class="row modal-row">
    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.FirstName)
    </div>
</div>
<div class="row modal-row">
    @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Surname)
    </div>
</div>
<div class="row modal-row">
    @Html.LabelFor(m => m.PESEL, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.PESEL, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.PESEL)
    </div>
</div>
<div class="row modal-row">
    @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EditorFor(m => m.BirthDate, new { @class = "form-control", disabled = "disabled" })
        @Html.ValidationMessageFor(m => m.BirthDate)
    </div>
</div>

<div class="row modal-row">
    @Html.LabelFor(m => m.Sex, new { @class = "col-md-2 control-label" })
    <div class="col-md-10">
        @Html.EnumDropDownListFor(
              x => x.Sex,
              "Wybierz płeć",
              new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Sex)
    </div>
</div>

@if (Model.Positions != null && Model.Positions.Count > 0)
{
    <div class="row modal-row">
        @Html.LabelFor(m => m.PositionDictionaryValueId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PositionDictionaryValueId, new SelectList(Model.Positions, "Id", "Name"), "- Wybierz -")
            @Html.ValidationMessageFor(m => m.PositionDictionaryValueId)
        </div>
    </div>
}
else
{
    <div class="row modal-row">
        @Html.LabelFor(m => m.PositionDictionaryValueId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <p>Brak słownika stanowisk.</p>
        </div>
    </div>
}
@Html.EditorFor(m => m.Address)
<div class="row modal-row">
    <div class="col-md-12">
        <div class="float-right">
            <input type="submit" class="btn btn-default" value="Zapisz" />
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#BirthDate").attr('readonly', 'readonly');

        $("#input-employee-photo-file").fileinput({
            uploadUrl: "@Html.Raw(Url.Action("UploadFile", "Employee", new { employeeId = Model.Id, fileType = (int)EwiPraca.Enumerations.FileType.EmployeeProfilePhoto }))",
            uploadAsync: true,
            minFileCount: 1,
            maxFileCount: 1,
            overwriteInitial: false,
            initialPreview: "",
            initialPreviewConfig: "",
            uploadExtraData: "",
            maxFileSize: 1024
        });

        $('#change-photo-container').hide();
    });



    $("#show-edit-employee-photo-modal").click(function () {
        $('#change-photo-container').show();
        $(this).hide();
    });

    $('#input-employee-photo-file').on('fileuploaded', function (event, data, previewId, index) {
        $('#change-photo-container').hide();

        showLoader();
        var options = { keyboard: true };
        var data = { employeeId: @Model.Id }
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditEmployeeView", "Employee")",
            contentType: "application/json",
            data: data,
            datatype: "json",
            success: function (data) {
                $('#edit-employee-modal-content').html(data);
                $('#edit-employee-modal').modal(options);
                hideLoader();
            },
            error: function () {
                hideLoader();
                alert("Dynamic content load failed.");
            }
        });
    });

    $("#closbtn").click(function () {
        $('#add-employee-modal').modal('hide');
    });
</script>
