@using EwiPraca.Enumerations
@using System.ComponentModel.DataAnnotations
@model EwiPraca.Models.EmployeeViewModel

@{
    var now = DateTime.Now;
    var contract = Model.Contracts.FirstOrDefault();
    var contractType = contract?.ContractType.GetAttribute<DisplayAttribute>();
    var contractDuration = contract?.DateTo == null ? "Czas nieokreślony" : contract.DateTo.Value.ToShortDateString();

    var medicalReport = Model.MedicalReports?.OrderByDescending(x => x.NextCompletionDate).FirstOrDefault(x => x.NextCompletionDate > now || !x.NextCompletionDate.HasValue);
    var oshTraining = Model.OSHTrainings?.OrderByDescending(x => x.NextCompletionDate).FirstOrDefault(x => x.NextCompletionDate > now || !x.NextCompletionDate.HasValue);
}

<div class="modal-wrapper">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h4 class="modal-title" id="myModalLabel">Edytuj dane Twojego Pracownika</h4>
    </div>

    <ul class="tabs-nav">

        <li id="employee-data-tab" class="active">
            <a href="#tab1">Dane osobowe</a>
        </li>

        <li id="contracts-tab">
            <a href="#tab2">Umowy</a>
        </li>

        <li>
            <a href="#tab3">Badania lekarskie</a>
        </li>

        <li>
            <a href="#tab4">Szkolenia BHP</a>
        </li>

        <li>
            <a href="#tab5">Zwolnienia lekarskie</a>
        </li>

        <li>
            <a href="#tab6">Urlopy</a>
        </li>

    </ul><!-- end .tabs-nav -->

    <div class="tabs-container">

        <div class="tab-content" id="tab1">
            @using (Ajax.BeginForm("EditEmployee", "Employee", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onEmployeeEditSuccess", OnFailure = "onFailureModalEdit" })) // { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.EditorFor(x => x)
            }
        </div><!-- end #tab1 -->

        <div class="tab-content" id="tab2">
            <h5>
                Ostatnia umowa
            </h5>
            @if (contract != null)
            {
                <div class="row modal-row">
                    @Html.Label("Rodzaj umowy", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@contractType.Name</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Data wygaśnięcia", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@contractDuration</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Etat", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@Html.Raw(contract.JobPartDictionaryValue?.Name ?? "Brak")</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Notatki", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@contract.Notes</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Wynagrodzenie w PLN", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p id="salary-span" class="hidden">@contract.Salary</p><a href="#" id="show-salary-button" class="button"><span class="glyphicon"></span>Pokaż</a>
                    </div>
                </div>
            }
            else
            {
                <p>Brak umów do wyświetlenia.</p>
            }

            <a href="#" id="open-add-employee-contract-modal" class="button"><span class="glyphicon glyphicon-plus"></span>Dodaj</a>

            <hr />

            <h5>Historia zatrudnienia</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary list-panel" id="list-panel">
                        <div class="panel-heading list-panel-heading">
                        </div>
                        <div class="panel-body">
                            <table id="contracts-data-table" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Typ umowy</th>
                                        <th>Miejsce pracy</th>
                                        <th>Ważna od</th>
                                        <th>Ważna do</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var employeeContract in Model.Contracts)
                                    {
                                        <tr>
                                            <td>@employeeContract.Id</td>
                                            @{
                                                var typeContract = employeeContract.ContractType.GetAttribute<DisplayAttribute>().Name;
                                                var contractDateToRow = employeeContract?.DateTo == null ? "Czas nieokreślony" : employeeContract.DateTo.Value.ToShortDateString();
                                                var contractDateFromRow = employeeContract?.DateFrom == null ? "Czas nieokreślony" : employeeContract.DateFrom.Value.ToShortDateString();
                                            }
                                            <td>@typeContract</td>
                                            <td>@employeeContract.Workplace</td>
                                            <td>@contractDateFromRow</td>
                                            <td>@contractDateToRow</td>
                                            <td></td>
                                        </tr>
                                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>


        </div><!-- end #tab2 -->

        <div class="tab-content" id="tab3">
            <h5>
                Ważne badanie lekarskie
            </h5>
            @if (medicalReport != null)
            {
                <div class="row modal-row">
                    @Html.Label("Data badania", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@medicalReport.CompletionDate.ToShortDateString()</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Wynik badania", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @{
                            var result = medicalReport.Result.GetAttribute<DisplayAttribute>().Name;
                        }
                        <p>@result</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Data następnego badania", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @{
                            var nextCompletionDate = !medicalReport.NextCompletionDate.HasValue ? "Bezterminowe" : medicalReport.NextCompletionDate.Value.ToShortDateString();
                        }

                        <p>@nextCompletionDate</p>
                    </div>
                </div>
                            }
                            else
                            {
                                <p style="color: red;">Brak ważnych badań lekarskich.</p>
                            }


            <a href="#" id="open-add-employee-medical-report-modal" class="button"><span class="glyphicon glyphicon-plus"></span>Dodaj</a>

            <hr />

            <h5>Poprzednie</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary list-panel" id="list-panel">
                        <div class="panel-heading list-panel-heading">
                        </div>
                        <div class="panel-body">
                            <table id="medical-reports-data-table" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Data badania</th>
                                        <th>Wynik</th>
                                        <th>Ważne do</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.MedicalReports != null)
                                    {
                                        foreach (var employeeMedicalReport in Model.MedicalReports)
                                        {
                                            <tr>
                                                <td>@employeeMedicalReport.Id</td>
                                                @{
                                                    var typeMedicalReport = employeeMedicalReport.Result.GetAttribute<DisplayAttribute>().Name;
                                                    var medicalReportValidTo = !employeeMedicalReport.NextCompletionDate.HasValue ? "Czas nieokreślony" : employeeMedicalReport.NextCompletionDate.Value.ToShortDateString();
                                                }
                                                <td>@employeeMedicalReport.CompletionDate.ToShortDateString()</td>
                                                <td>@typeMedicalReport</td>
                                                <td>@medicalReportValidTo</td>
                                                <td></td>
                                            </tr>
                                                        }
                                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div><!-- end #tab3 -->


        <div class="tab-content" id="tab4">
            <h5>
                Ważne szkolenie BHP
            </h5>
            @if (oshTraining != null)
            {
                <div class="row modal-row">
                    @Html.Label("Data szkolenia", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <p>@oshTraining.CompletionDate.ToShortDateString()</p>
                    </div>
                </div>
                <div class="row modal-row">
                    @Html.Label("Data następnego szkolenia", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @{
                            var oshTrainingNextCompletionDate = !oshTraining.NextCompletionDate.HasValue ? "Bezterminowe" : oshTraining.NextCompletionDate.Value.ToShortDateString();
                        }

                        <p>@oshTrainingNextCompletionDate</p>
                    </div>
                </div>
                            }
                            else
                            {
                                <p style="color: red;">Brak ważnego szkolenia BHP.</p>
                            }


            <a href="#" id="open-add-employee-osh-training-modal" class="button"><span class="glyphicon glyphicon-plus"></span>Dodaj</a>

            <hr />

            <h5>Poprzednie</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary list-panel" id="list-panel">
                        <div class="panel-heading list-panel-heading">
                        </div>
                        <div class="panel-body">
                            <table id="osh-trainings-data-table" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Data szkolenia</th>
                                        <th>Następne szkolenie</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.OSHTrainings != null)
                                    {
                                        foreach (var training in Model.OSHTrainings)
                                        {
                                            <tr>
                                                <td>@training.Id</td>
                                                @{
                                                    var oshTrainingValidTo = !training.NextCompletionDate.HasValue ? "Czas nieokreślony" : training.NextCompletionDate.Value.ToShortDateString();
                                                }
                                                <td>@training.CompletionDate.ToShortDateString()</td>
                                                <td>@oshTrainingValidTo</td>
                                                <td></td>
                                            </tr>
                                                        }
                                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="tab-content" id="tab5">
            <h5>
                Zwolnienia lekarskie
            </h5>
            <a href="#" id="open-add-employee-sick-leave-modal" class="button"><span class="glyphicon glyphicon-plus"></span>Dodaj</a>

            <hr />

            <h5>Historia</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-primary list-panel" id="list-panel">
                        <div class="panel-heading list-panel-heading">
                        </div>
                        <div class="panel-body">
                            <table id="sick-leaves-data-table" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Data od</th>
                                        <th>Data do</th>
                                        <th>Notatki</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.SickLeaves != null)
                                    {
                                        foreach (var sickLeave in Model.SickLeaves)
                                        {
                                            <tr>
                                                <td>@sickLeave.Id</td>
                                                <td>@sickLeave.DateFrom.ToShortDateString()</td>
                                                <td>@sickLeave.DateTo.ToShortDateString()</td>
                                                <td>@sickLeave.Notes</td>
                                                <td></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div><!-- end .tabs-container -->


</div>

@Html.Partial("_AddContractData", Model.Id)
@Html.Partial("_AddMedicalReportData", Model.Id)
@Html.Partial("_AddOSHTrainingData", Model.Id)
@Html.Partial("_AddSickLeaveData", Model.Id)

<script type="text/javascript">
    function onEmployeeEditSuccess(e) {
        if (e.Success == "true") {
            $('#edit-employee-modal').modal('hide');
            window.location.reload();
        }
        else {
            showErrorMessage(e.Messsage);
        }
    }

    (function () {
        var $tabsNav = $('.tabs-nav'),
			$tabsNavLis = $tabsNav.children('li'),
			$tabContent = $('.tab-content');

        $tabsNav.each(function () {
            var $this = $(this);

            $this.next().children('.tab-content').stop(true, true).hide()
												 .first().show();

            $this.children('li').first().addClass('active').stop(true, true).show();
        });

        $tabsNavLis.on('click', function (e) {
            var $this = $(this);

            $this.siblings().removeClass('active').end()
				 .addClass('active');

            $this.parent().next().children('.tab-content').stop(true, true).hide()
														  .siblings($this.find('a').attr('href')).fadeIn();

            e.preventDefault();
        });
    })();

    var dt = $('#contracts-data-table').DataTable({
        responsive: true,
        "columnDefs": [
        {
            "targets": [0],
            "visible": false,
            "searchable": false
        },
         {
             "targets": [1],
         },
         {
             "targets": [2]
         },
         {
             "targets": [3]
         },
         {
             "targets": [4]
         },
          {
              "targets": [5],
              mRender: function (data, type, row) {

                  return '<a class="button grid-button edit-contract-button" data-id="' + row[0] + '">Edytuj</a><a class="button grid-button delete-button-contract" data-id="' + row[0] + '">Usuń</a>'
              }
          },
        ],
        "oLanguage": {
            "sSearch": "Szukaj: ",
            "sEmptyTable": "Brak danych do wyświetlenia",
            "sInfo": "_START_ do _END_ z _TOTAL_ wierszy",
            "sInfoEmpty": "0 z 0 z 0 wierszy",
            "oPaginate": {
                "sNext": "Następna",
                "sPrevious": "Poprzednia"
            },
            "sLengthMenu": "Pokaż na stronę: _MENU_",
        }
    });

    $('.edit-contract-button').click(function () {
        var id = $(this).attr('data-id');

        showLoader();
        var options = { "backdrop": "static", keyboard: true };
        var data = { contractId: id }
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditContractView", "Contract")",
            contentType: "application/json",
            data: data,
            datatype: "json",
            success: function (data) {
                $('#edit-contract-modal-content').html(data);
                $('#edit-contract-modal').modal(options);
                $('#edit-employee-modal').modal('hide');
                $('#edit-contract-modal').modal('show');
                hideLoader();
            },
            error: function () {
                hideLoader();
                alert("Dynamic content load failed.");
            }
        });
    });

    $('.delete-button-contract').click(function (e) {
        var id = $(this).attr('data-id');
        var data = { id: id };

        var ok = confirm("Czy na pewno chcesz usunąć ten rekord?");
        if (ok) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteContract", "Contract")",
                contentType: "application/json",
                data: JSON.stringify(data),
                datatype: "json",
                success: function (data) {
                    if (data.Success == "true") {

                        var options = { "backdrop": "static", keyboard: true };
                        var data = { employeeId: @Model.Id }
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("EditEmployeeView", "Employee")",
                            contentType: "application/json",
                            data: data,
                            datatype: "json",
                            success: function (data) {
                                $('#edit-employee-modal-content').html(data);

                            },
                            error: function () {
                                hideLoader();
                                alert("Dynamic content load failed.");
                            }
                        });
                    }
                    else {
                        showErrorMessage(e.Message);
                    }
                },
                error: function (e) {
                    showErrorMessage("Wystąpił błąd. " + e);
                }
            });
        }
        else {
            e.preventDefault();
        }
    });

    var dt = $('#medical-reports-data-table').DataTable({
        responsive: true,
        "columnDefs": [
        {
            "targets": [0],
            "visible": false,
            "searchable": false
        },
         {
             "targets": [1],
         },
         {
             "targets": [2]
         },
         {
             "targets": [3]
         },
          {
              "targets": [4],
              mRender: function (data, type, row) {

                  return '<a class="button grid-button edit-medical-report-button" data-id="' + row[0] + '">Edytuj</a><a class="button grid-button delete-button-medical-report" data-id="' + row[0] + '">Usuń</a>'
              }
          },
        ],
        "oLanguage": {
            "sSearch": "Szukaj: ",
            "sEmptyTable": "Brak danych do wyświetlenia",
            "sInfo": "_START_ do _END_ z _TOTAL_ wierszy",
            "sInfoEmpty": "0 z 0 z 0 wierszy",
            "oPaginate": {
                "sNext": "Następna",
                "sPrevious": "Poprzednia"
            },
            "sLengthMenu": "Pokaż na stronę: _MENU_",
        }
    });

    $('.edit-medical-report-button').click(function () {
        var id = $(this).attr('data-id');

        showLoader();
        var options = { "backdrop": "static", keyboard: true };
        var data = { reportId: id }
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditMedicalReportView", "MedicalReport")",
            contentType: "application/json",
            data: data,
            datatype: "json",
            success: function (data) {
                $('#edit-medical-report-modal-content').html(data);
                $('#edit-medical-report-modal').modal(options);
                $('#edit-employee-modal').modal('hide');
                $('#edit-medical-report-modal').modal('show');
                hideLoader();
            },
            error: function (e) {
                debugger;
                hideLoader();
                alert("Dynamic content load failed.");
            }
        });
    });

    $('.delete-button-medical-report').click(function (e) {
        var id = $(this).attr('data-id');
        var data = { id: id };

        var ok = confirm("Czy na pewno chcesz usunąć ten rekord?");
        if (ok) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteMedicalReport", "MedicalReport")",
                contentType: "application/json",
                data: JSON.stringify(data),
                datatype: "json",
                success: function (data) {
                    if (data.Success == "true") {

                        var options = { "backdrop": "static", keyboard: true };
                        var data = { employeeId: @Model.Id }
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("EditEmployeeView", "Employee")",
                            contentType: "application/json",
                            data: data,
                            datatype: "json",
                            success: function (data) {
                                $('#edit-employee-modal-content').html(data);

                            },
                            error: function () {
                                hideLoader();
                                alert("Dynamic content load failed.");
                            }
                        });
                    }
                    else {
                        showErrorMessage(e.Message);
                    }
                },
                error: function (e) {
                    showErrorMessage("Wystąpił błąd. " + e);
                }
            });
        }
        else {
            e.preventDefault();
        }
    });

    var dt = $('#osh-trainings-data-table').DataTable({
        responsive: true,
        "columnDefs": [
        {
            "targets": [0],
            "visible": false,
            "searchable": false
        },
         {
             "targets": [1],
         },
         {
             "targets": [2]
         },
          {
              "targets": [3],
              mRender: function (data, type, row) {

                  return '<a class="button grid-button edit-osh-training-button" data-id="' + row[0] + '">Edytuj</a><a class="button grid-button delete-button-osh-training" data-id="' + row[0] + '">Usuń</a>'
              }
          },
        ],
        "oLanguage": {
            "sSearch": "Szukaj: ",
            "sEmptyTable": "Brak danych do wyświetlenia",
            "sInfo": "_START_ do _END_ z _TOTAL_ wierszy",
            "sInfoEmpty": "0 z 0 z 0 wierszy",
            "oPaginate": {
                "sNext": "Następna",
                "sPrevious": "Poprzednia"
            },
            "sLengthMenu": "Pokaż na stronę: _MENU_",
        }
    });

    $('.edit-osh-training-button').click(function () {
        var id = $(this).attr('data-id');

        showLoader();
        var options = { "backdrop": "static", keyboard: true };
        var data = { reportId: id }
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditOSHTrainingView", "OSHTraining")",
            contentType: "application/json",
            data: data,
            datatype: "json",
            success: function (data) {
                $('#edit-osh-training-modal-content').html(data);
                $('#edit-osh-training-modal').modal(options);
                $('#edit-employee-modal').modal('hide');
                $('#edit-osh-training-modal').modal('show');
                hideLoader();
            },
            error: function (e) {
                debugger;
                hideLoader();
                alert("Dynamic content load failed.");
            }
        });
    });

    $('.delete-button-osh-training').click(function (e) {
        var id = $(this).attr('data-id');
        var data = { id: id };

        var ok = confirm("Czy na pewno chcesz usunąć ten rekord?");
        if (ok) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteOSHTraining", "OSHTraining")",
                contentType: "application/json",
                data: JSON.stringify(data),
                datatype: "json",
                success: function (data) {
                    if (data.Success == "true") {

                        var options = { "backdrop": "static", keyboard: true };
                        var data = { employeeId: @Model.Id }
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("EditEmployeeView", "Employee")",
                            contentType: "application/json",
                            data: data,
                            datatype: "json",
                            success: function (data) {
                                $('#edit-employee-modal-content').html(data);
                            },
                            error: function () {
                                hideLoader();
                                alert("Dynamic content load failed.");
                            }
                        });
                    }
                    else {
                        showErrorMessage(e.Message);
                    }
                },
                error: function (e) {
                    showErrorMessage("Wystąpił błąd. " + e);
                }
            });
        }
        else {
            e.preventDefault();
        }
    });

    var dt = $('#sick-leaves-data-table').DataTable({
        responsive: true,
        "columnDefs": [
        {
            "targets": [0],
            "visible": false,
            "searchable": false
        },
         {
             "targets": [1],
         },
         {
             "targets": [2]
         },
         {
             "targets": [3]
         },
          {
              "targets": [4],
              mRender: function (data, type, row) {

                  return '<a class="button grid-button delete-button-sick-leave" data-id="' + row[0] + '">Usuń</a>'
              }
          },
        ],
        "oLanguage": {
            "sSearch": "Szukaj: ",
            "sEmptyTable": "Brak danych do wyświetlenia",
            "sInfo": "_START_ do _END_ z _TOTAL_ wierszy",
            "sInfoEmpty": "0 z 0 z 0 wierszy",
            "oPaginate": {
                "sNext": "Następna",
                "sPrevious": "Poprzednia"
            },
            "sLengthMenu": "Pokaż na stronę: _MENU_",
        }
    });

    $('.delete-button-sick-leave').click(function (e) {
        var id = $(this).attr('data-id');
        var data = { id: id };

        var ok = confirm("Czy na pewno chcesz usunąć ten rekord?");
        if (ok) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteSickLeave", "SickLeave")",
                contentType: "application/json",
                data: JSON.stringify(data),
                datatype: "json",
                success: function (data) {
                    if (data.Success == "true") {

                        var options = { "backdrop": "static", keyboard: true };
                        var data = { employeeId: @Model.Id }
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("EditEmployeeView", "Employee")",
                            contentType: "application/json",
                            data: data,
                            datatype: "json",
                            success: function (data) {
                                $('#edit-employee-modal-content').html(data);
                            },
                            error: function () {
                                hideLoader();
                                alert("Dynamic content load failed.");
                            }
                        });
                    }
                    else {
                        showErrorMessage(e.Message);
                    }
                },
                error: function (e) {
                    showErrorMessage("Wystąpił błąd. " + e);
                }
            });
        }
        else {
            e.preventDefault();
        }
    });

    $("#show-salary-button").click(function(){
        $("#salary-span").removeClass("hidden");
        $(this).hide();
    });

</script>